// Code generated by Kitex v0.4.4. DO NOT EDIT.

package testservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	tiktok "TikTokLiteV2/kitex_gen/tiktok"
)

func serviceInfo() *kitex.ServiceInfo {
	return testServiceServiceInfo
}

var testServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "TestService"
	handlerType := (*tiktok.TestService)(nil)
	methods := map[string]kitex.MethodInfo{
		"Test": kitex.NewMethodInfo(testHandler, newTestServiceTestArgs, newTestServiceTestResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "tiktok",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.4.4",
		Extra:           extra,
	}
	return svcInfo
}

func testHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*tiktok.TestServiceTestArgs)
	realResult := result.(*tiktok.TestServiceTestResult)
	success, err := handler.(tiktok.TestService).Test(ctx, realArg.Request)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newTestServiceTestArgs() interface{} {
	return tiktok.NewTestServiceTestArgs()
}

func newTestServiceTestResult() interface{} {
	return tiktok.NewTestServiceTestResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) Test(ctx context.Context, request *tiktok.TestRequest) (r *tiktok.TestResponse, err error) {
	var _args tiktok.TestServiceTestArgs
	_args.Request = request
	var _result tiktok.TestServiceTestResult
	if err = p.c.Call(ctx, "Test", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
